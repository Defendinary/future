// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye",
    // a dockerfile can also live inside the .devcontainer folder
    //"build": { "dockerfile": "Dockerfile" },
  
    //"customizations": {
    //  "vscode": {
    //    "extensions": ["dbaeumer.vscode-eslint"]
    //  }
    //},


	"features": {
		"ghcr.io/jsburckhardt/devcontainer-features/uv:1": {},
		"ghcr.io/devcontainers-extra/features/poetry:2": {}
	},

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
    // "forwardPorts": [3000]

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip3 install --user -r requirements.txt"
    // npm install && npm -i -g @azure/static-web-apps-cli

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root", # "node"
    // "postStartCommand": "sudo /etc/init.d/ssh start", // sudo service ssh start

    //"build": {
        //"dockerfile": "Dockerfile",
        //"context": "..",
        //"args": {
            //"VARIANT": "3.12"
            //"NODE_VERSION": "none",
        //}
    //},

    // "remoteUser": "vscode",
    //"remoteEnv": {
    //    "PATH": "${containerEnv:PATH}:some/other/value:another/path/value"
    //},
    //"runArgs": [
    //    "--env-file",
    //    ".devcontainer/devcontainer.env"
    //],

    // monorepo shit to only grab frontend or backend (devcontainer must be made for each folder
    // frontend/backend, which will resolve to localWorkspaceFolder
    //"workspaceMount": "source=${localWorkspaceFolder},target=/workspace},type=bind",
    //"workspaceFolder": "/workspace"

}